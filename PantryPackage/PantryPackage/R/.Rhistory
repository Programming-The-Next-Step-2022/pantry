url <-
"https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/findByIngredients"
queryString <- list(
ingredients = "chickpeas, spinach, tomato", # required parameter
ranking = "1", # 1 = maximize used ingredients
# 2 = minimize missing ingredients first
ignorePantry = "true", #ignore salt, sugar, flour etc.
number = "1" # number of recipes to return
)
response <- VERB("GET", url,
add_headers(
'X-RapidAPI-Host' =
'spoonacular-recipe-food-nutrition-v1.p.rapidapi.com',
'X-RapidAPI-Key' =
'b729bf5802mshd4d7b8537e441f3p1850d9jsnc8b828bd5f3a'),
query = queryString, content_type("application/octet-stream"))
content(response, "parsed")
library(httr)
url <-
"https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/findByIngredients"
queryString <- list(
ingredients = "chickpeas, spinach, tomato", # required parameter
ranking = "1", # 1 = maximize used ingredients
# 2 = minimize missing ingredients first
ignorePantry = "true", #ignore salt, sugar, flour etc.
number = "1" # number of recipes to return
)
response <- VERB("GET", url,
add_headers(
'X-RapidAPI-Host' =
'spoonacular-recipe-food-nutrition-v1.p.rapidapi.com',
'X-RapidAPI-Key' =
'b729bf5802mshd4d7b8537e441f3p1850d9jsnc8b828bd5f3a'),
query = queryString, content_type("application/octet-stream"))
content(response, "parsed")
View(response)
response[[1]]$id
View(response)
response[[1]]
[[1]]$id\
response[[1]][[1]]$id
response[[1]][[1]]
response[1]
response[["all_headers"]]
response[["request"]]
response[["handle"]]
response[["times"]]
response[["cookies"]]
response[["headers"]]
response[["url"]]
response[["status_code"]]
response[["content"]]
response[["date"]]
?content()
test <- content(response, "parsed")
View(test)
test[[1]][["id"]]
output <- content(response, "parsed")
rm(test)
View(output)
output <- content(response, "parsed")
id <- output[[1]][["id"]]
output[[1]][["id"]]
fullinfo <-
"https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/281307/information"
responsefull <- VERB("GET", fullinfo,
add_headers(
'X-RapidAPI-Host' =
'spoonacular-recipe-food-nutrition-v1.p.rapidapi.com',
'X-RapidAPI-Key' =
'b729bf5802mshd4d7b8537e441f3p1850d9jsnc8b828bd5f3a'),
content_type("application/octet-stream"))
content(responsefull, "text")
recipeinfo <- content(responsefull, "text")
recipeinfo <- content(responsefull, "parsed")
View(recipeinfo)
?modify_url()
modify_url("https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/281307/information",
fragment = 2)
modify_url("https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/281307/information",
query = 2)
queryString <- list(
ingredients = "chickpeas, spinach, tomato", # required parameter
ranking = "1", # 1 = maximize used ingredients
# 2 = minimize missing ingredients first
ignorePantry = "true", #ignore salt, sugar, flour etc.
number = "2" # number of recipes to return
)
response <- VERB("GET", url,
add_headers(
'X-RapidAPI-Host' =
'spoonacular-recipe-food-nutrition-v1.p.rapidapi.com',
'X-RapidAPI-Key' =
'b729bf5802mshd4d7b8537e441f3p1850d9jsnc8b828bd5f3a'),
query = queryString, content_type("application/octet-stream"))
output <- content(response, "parsed")
recipeinfo[["vegan"]]
View(output)
?textInput()
library(shiny)
?textInput
?selectInput
url <-
"https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/findByIngredients"
recipepull <- list(
ingredients = "chickpeas, spinach, tomato", # required parameter
ranking = "1", # 1 = maximize used ingredients
# 2 = minimize missing ingredients first
ignorePantry = "true", #ignore salt, sugar, flour etc.
number = "1" # number of recipes to return
)
pantryrecipe <- VERB("GET", url,
add_headers(
'X-RapidAPI-Host' =
'spoonacular-recipe-food-nutrition-v1.p.rapidapi.com',
'X-RapidAPI-Key' =
'b729bf5802mshd4d7b8537e441f3p1850d9jsnc8b828bd5f3a'),
query = recipepull, content_type("application/octet-stream"))
output <- content(pantryrecipe, "parsed")
library(httr)
url <-
"https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/findByIngredients"
recipepull <- list(
ingredients = "chickpeas, spinach, tomato", # required parameter
ranking = "1", # 1 = maximize used ingredients
# 2 = minimize missing ingredients first
ignorePantry = "true", #ignore salt, sugar, flour etc.
number = "1" # number of recipes to return
)
pantryrecipe <- VERB("GET", url,
add_headers(
'X-RapidAPI-Host' =
'spoonacular-recipe-food-nutrition-v1.p.rapidapi.com',
'X-RapidAPI-Key' =
'b729bf5802mshd4d7b8537e441f3p1850d9jsnc8b828bd5f3a'),
query = recipepull, content_type("application/octet-stream"))
output <- content(pantryrecipe, "parsed")
View(output)
fullinfo <-
"https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/281307/information"
responsefull <- VERB("GET", fullinfo,
add_headers(
'X-RapidAPI-Host' =
'spoonacular-recipe-food-nutrition-v1.p.rapidapi.com',
'X-RapidAPI-Key' =
'b729bf5802mshd4d7b8537e441f3p1850d9jsnc8b828bd5f3a'),
content_type("application/octet-stream"))
recipeinfo <- content(responsefull, "parsed")
View(recipeinfo)
View(output)
length(output)
recipenumber <- length(output)
id <- output[[recipenumber]][["id"]]
print(as.character(numrecipe))
numrecipe <- 1
numrecipe <- 1
print(as.character(numrecipe))
View(recipeinfo)
recipeinfo[["sourceUrl"]]
recipeinfo[["instructions"]]
recipeinfo[["analyzedInstructions"]]
View(recipepull)
View(pantryrecipe)
View(output)
output
View(recipeinfo)
recipeinfo[["summary"]]
recipeinfo[["extendedIngredients"]]
?paste0()
aaaa <-
"https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/281307/information"
notfullinfo <- "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/"
library(httr)
